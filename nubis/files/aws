#!/usr/bin/env python
import cgi
import sys
import os
import cgitb; cgitb.enable()  # for troubleshooting
import urllib, json
import requests

import boto3
import boto.utils

# Step 1: Authenticate user in your own identity system.
user = os.environ['REMOTE_USER']

# Detect our current region
data = boto.utils.get_instance_identity()
region = data['document']['region']

# Step 2: Using the access keys for an IAM user in your AWS account,
# call "AssumeRole" to get temporary access keys for the federated user

# Note: Calls to AWS STS AssumeRole must be signed using the access key ID 
# and secret access key of an IAM user or using existing temporary credentials.
# The credentials can be in EC2 instance metadata, in environment variables, 
# or in a configuration file, and will be discovered automatically by the 
# STSConnection() function. For more information, see the Python SDK docs:
# http://boto.readthedocs.org/en/latest/boto_config_tut.html
s = boto3.Session(profile_name='readonly')

c = s.get_credentials()

access_key = c.access_key
secret_key = c.secret_key
session_token = c.token

# Step 3: Format resulting temporary credentials into JSON
json_string_with_temp_credentials = '{'
json_string_with_temp_credentials += '"sessionId":"' + access_key + '",'
json_string_with_temp_credentials += '"sessionKey":"' + secret_key + '",'
json_string_with_temp_credentials += '"sessionToken":"' + session_token + '"'
json_string_with_temp_credentials += '}'

# Step 4. Make request to AWS federation endpoint to get sign-in token. Construct the parameter string with
# the sign-in action request, a 12-hour session duration, and the JSON document with temporary credentials 
# as parameters.
request_parameters = "?Action=getSigninToken"
request_parameters += "&SessionDuration=43200"
request_parameters += "&Session=" + urllib.quote_plus(json_string_with_temp_credentials)
request_url = "https://signin.aws.amazon.com/federation" + request_parameters
r = requests.get(request_url)
# Returns a JSON document with a single element named SigninToken.
signin_token = json.loads(r.text)

# Step 5: Create URL where users can use the sign-in token to sign in to 
# the console. This URL must be used within 15 minutes after the
# sign-in token was issued.
request_parameters = "?Action=login" 
request_parameters += "&Issuer=Nubis" 
request_parameters += "&Destination=" + urllib.quote_plus("https://" + region + ".console.aws.amazon.com/")
request_parameters += "&SigninToken=" + signin_token["SigninToken"]
request_url = "https://signin.aws.amazon.com/federation" + request_parameters

# Send final URL to stdout
print "Location: %s" % request_url
print ""
